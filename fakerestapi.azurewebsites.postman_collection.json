{
	"info": {
		"_postman_id": "86260f5f-ae56-49e0-bac4-7410ee945994",
		"name": "fakerestapi.azurewebsites",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18191428"
	},
	"item": [
		{
			"name": "Get All Authors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status Code\r",
							"pm.test(\"Verify that the Status code is 200\", function () \r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"// Response Time \r",
							"pm.test(\"Verify that the response time below 1000ms\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"//Response Size\r",
							"console.log(pm.response.responseSize)\r",
							"\r",
							"pm.test(\"Verify that the response size below 50kb\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.responseSize).to.be.below(50000);\r",
							"});\r",
							"\r",
							"//Test Header\r",
							"pm.test(\"Verify Header content type is json\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"json\")\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add New Author",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Validate that the code returns 400 When Add Author with empty data in Firstname and Lastname\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.status).to.eql(400);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\":42522,\r\n  \"idBook\":22522,\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author with Book ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status code\r",
							"pm.test(\"Verify that the Status code is 200\", function () \r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"//Array\r",
							"pm.test(\"Array - Verify Second name\", function () \r",
							"{\r",
							"    pm.expect(pm.response.json()[1].firstName).to.equal(\"First Name 2\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"idBook\": 1,\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/authors//books/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"authors",
						"",
						"books",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Author with ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status Code\r",
							"pm.test(\"Verify that the Status code is 200\", function () \r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"// Response Time \r",
							"pm.test(\"Verify that the response time below 1000ms\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"//Response Size\r",
							"console.log(pm.response.responseSize)\r",
							"\r",
							"pm.test(\"Verify that the response size below 50kb\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.responseSize).to.be.below(100);\r",
							"});\r",
							"\r",
							"//Test Header\r",
							"pm.test(\"Verify Header content type is json\", function ()\r",
							"{\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"json\")\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\" : 1,\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Author with ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Status Code\r",
							"pm.test(\"Verify that the Status code is 200 and Author updates successfully\", function () \r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": 0,\r\n  \"idBook\": 0,\r\n  \"firstName\": \"Salah\",\r\n  \"lastName\": \"Atef\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/1",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Author With ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Verify that the Status code is 200 and Author deleted successfully\", function () \r",
							"{\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": 4,\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{URL}}/api/v1/Authors/4",
					"host": [
						"{{URL}}"
					],
					"path": [
						"api",
						"v1",
						"Authors",
						"4"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "fakerestapi.azurewebsites.net"
		}
	]
}